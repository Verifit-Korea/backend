name: Build and Deploy to EC2

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run : chmod +x gradlew

      - name: Build with Gradle without Test
        run: ./gradlew clean build -x test
        

  deploy:
    needs: build
    runs-on: ubuntu-latest
  
    steps:
      - name: Chechout Repo
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USERNAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null build/libs/verifit-0.0.1-SNAPSHOT.jar $USER@$HOST:~/cicd
          ssh -i private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $USER@$HOST << EOF
            sudo systemctl stop springboot-app
            sudo systemctl start springboot-app
          EOF
          rm -f private_key.pem
          
